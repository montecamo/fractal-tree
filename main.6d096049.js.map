{"version":3,"sources":["Canvas.js","Tree.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_root.js","../node_modules/lodash/now.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/toNumber.js","../node_modules/lodash/debounce.js","../node_modules/lodash/throttle.js","Slider.js","TreeSlider.js","DragCapture.js","ScrollCapture.js","ZoomCapture.js","Animation.js","main.js"],"names":["Canvas","options","canvas","document","createElement","ctx","getContext","initCanvas","width","height","updateDimensions","lineJoin","lineCap","lineWidth","strokeStyle","clearRect","x1","y1","x2","y2","beginPath","initCtx","moveTo","lineTo","stroke","elem","appendChild","Tree","color","init","propName","value","undefined","depth","angle","length","lengthRatio","angleRatio","tilt","topOffset","leftOffset","setProperty","clear","getInitialCoords","x","y","drawLine","drawLevel","radius","normalizedAngle","radians","Math","PI","cos","sin","getLength","drawBranch","leftX","leftY","rightX","rightY","newAngle","getBranchTop","endX","endY","prop","Slider","slider","initDisplay","displayClassName","min","max","step","name","className","containerClassName","setAttribute","addEventListener","e","updateDisplay","target","display","classList","add","innerHTML","removeEventListener","container","parentNode","removeChild","TreeSlider","onChange","displayName","animator","animationDuration","animating","animation","animate","bind","onInput","stopPropagation","finish","finished","window","requestAnimationFrame","start","DragDelta","getX","getY","reset","onMouseMove","onMouseDown","deltaX","clientX","pressedX","deltaY","clientY","pressedY","ScrollCapture","onMouseWheel","ctrlKey","zoom","Animation","from","to","duration","startTime","Date","now","progress","cb","animations","$animate","getElementById","$animateSwitch","$sliders","sliders","FractalTree","innerWidth","innerHeight","DragCaptor","DragCapture","get","draw","ScrollCaptor","ZoomCaptor","ZoomCapture","sliderDrawer","initSliders","push","property","mount","animLoop","startValue","animateGrow","growUp","growDown","forEach","finishAnimation","unmount","capture"],"mappings":"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","file":"main.6d096049.js","sourceRoot":"../src","sourcesContent":["class Canvas {\n  constructor(options = {}) {\n    this.canvas = document.createElement('canvas');\n\n    this.ctx = this.canvas.getContext('2d');\n    this.options = options;\n\n    this.initCanvas(this.canvas, options);\n  }\n\n  initCanvas(canvas, options) {\n    const { width, height } = options;\n\n    this.updateDimensions(width, height);\n  }\n\n  updateDimensions(width, height) {\n    this.canvas.width = width;\n    this.canvas.height = height;\n  }\n\n  initCtx() {\n    const {\n      lineJoin = 'round',\n      lineCap = 'round',\n      lineWidth = 2,\n      strokeStyle = '#ffd5d5',\n    } = this.options;\n\n    this.ctx.strokeStyle = strokeStyle;\n    this.ctx.lineWidth = lineWidth;\n    this.ctx.lineJoin = lineJoin;\n    this.ctx.lineCap = lineCap;\n  }\n\n  /**\n   * @public\n   */\n  clear() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  /**\n   * @public\n   */\n  drawLine(x1, y1, x2, y2) {\n    this.ctx.beginPath();\n\n    this.initCtx();\n    this.ctx.moveTo(x1, y1);\n    this.ctx.lineTo(x2, y2);\n    this.ctx.stroke();\n  }\n\n  /**\n   *\n   * @public\n   */\n  mount(elem) {\n    elem.appendChild(this.canvas);\n  }\n}\n\nexport default Canvas;\n","import Canvas from './Canvas';\n\nclass Tree extends Canvas {\n  constructor(options = {}) {\n    super({\n      strokeStyle: options.color,\n      width: options.width,\n      height: options.height,\n    });\n\n    this.init(options);\n  }\n\n  setProperty(propName, value) {\n    this[propName] = value === undefined ? this[propName] : value;\n  }\n\n  init(options) {\n    const {\n      width,\n      height,\n      depth,\n      angle,\n      length,\n      lengthRatio,\n      angleRatio,\n      tilt,\n      topOffset,\n      leftOffset,\n    } = options;\n\n    this.setProperty('width', width);\n    this.setProperty('height', height);\n    this.setProperty('topOffset', topOffset);\n    this.setProperty('leftOffset', leftOffset);\n    this.setProperty('depth', depth);\n    this.setProperty('angle', angle);\n    this.setProperty('length', length);\n    this.setProperty('lengthRatio', lengthRatio);\n    this.setProperty('angleRatio', angleRatio);\n    this.setProperty('tilt', tilt);\n\n    this.updateDimensions(this.width, this.height);\n  }\n\n  draw(options = {}) {\n    this.init(options);\n\n    this.clear();\n\n    const [x, y] = this.getInitialCoords();\n\n    this.drawLine(x, y, x, y - this.length);\n    this.drawLevel(x, y - this.length, 1, this.tilt + this.angle / 2);\n  }\n\n  getLength(depth) {\n    if (this.length - this.length * this.lengthRatio * depth <= 0) return 0;\n\n    return this.length - this.length * this.lengthRatio * depth;\n  }\n\n  getInitialCoords() {\n    return [this.width / 2 + this.leftOffset, this.topOffset];\n  }\n\n  getBranchTop(x, y, angle, radius) {\n    const normalizedAngle = angle + 90;\n\n    const radians = (normalizedAngle * Math.PI) / 180.0;\n\n    const topX = x + radius * Math.cos(radians);\n    const topY = y - radius * Math.sin(radians);\n\n    return [topX, topY];\n  }\n\n  drawLevel(x, y, depth, angle) {\n    if (depth > this.depth) return;\n\n    const length = this.getLength(depth);\n\n    const [leftX, leftY] = this.drawBranch(x, y, angle - this.angle, length);\n    const [rightX, rightY] = this.drawBranch(x, y, angle, length);\n\n    const newAngle = this.angleRatio + this.angle / 2;\n\n    this.drawLevel(leftX, leftY, depth + 1, this.tilt + angle - newAngle);\n    this.drawLevel(rightX, rightY, depth + 1, this.tilt + angle + newAngle);\n  }\n\n  drawBranch(x, y, angle, length) {\n    const [endX, endY] = this.getBranchTop(x, y, angle, length);\n\n    this.drawLine(x, y, endX, endY);\n\n    return [endX, endY];\n  }\n\n  get(prop) {\n    return this[prop];\n  }\n}\n\nexport default Tree;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var debounce = require('./debounce'),\n    isObject = require('./isObject');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nmodule.exports = throttle;\n","class Slider {\n  constructor(options) {\n    this.slider = document.createElement('input');\n\n    this.initDisplay(options.displayClassName);\n    this.init(options);\n  }\n\n  init(options) {\n    const {\n      min,\n      max,\n      value,\n      step,\n      name,\n      className,\n      containerClassName,\n    } = options;\n\n    this.slider.setAttribute('type', 'range');\n    this.slider.setAttribute('min', min);\n    this.slider.setAttribute('max', max);\n    this.slider.setAttribute('step', step);\n    this.slider.setAttribute('value', value);\n    this.slider.setAttribute('class', className);\n\n    this.containerClassName = containerClassName;\n    this.name = name;\n\n    this.addEventListener('input', e => this.updateDisplay(e.target.value));\n    this.updateDisplay(value);\n  }\n\n  initDisplay(className) {\n    this.display = document.createElement('span');\n    this.display.classList.add(className);\n  }\n\n  updateDisplay(value) {\n    this.display.innerHTML = `${this.name}: ${value}`;\n  }\n\n  addEventListener(...args) {\n    this.slider.addEventListener(...args);\n  }\n\n  removeEventListener(...args) {\n    this.slider.removeEventListener(...args);\n  }\n\n  mount(elem) {\n    this.container = document.createElement('div');\n    this.container.classList.add(this.containerClassName);\n\n    this.container.appendChild(this.slider);\n    this.container.appendChild(this.display);\n\n    elem.appendChild(this.container);\n\n    return this;\n  }\n\n  unmount() {\n    this.container.parentNode.removeChild(this.container);\n  }\n}\n\nexport default Slider;\n","import throttle from 'lodash/throttle';\n\nimport Slider from './Slider';\n\nclass TreeSlider extends Slider {\n  constructor(options) {\n    const {\n      value,\n      min,\n      max,\n      step,\n      onChange,\n      displayName,\n      animator,\n      animationDuration = 1000,\n    } = options;\n\n    super({\n      value,\n      min,\n      max,\n      step,\n      name: displayName,\n      containerClassName: 'slider-container',\n      displayClassName: 'slider-name',\n      className: 'slider',\n    });\n\n    this.animating = false;\n    this.onChange = onChange;\n    this.animation = animator;\n    this.animationDuration = animationDuration;\n    this.value = value;\n\n    this.animate = this.animate.bind(this);\n    this.onInput = this.onInput.bind(this);\n\n    if (this.animation) {\n      this.onInput = throttle(this.onInput, 100);\n    }\n\n    this.addEventListener('input', this.onInput);\n    this.addEventListener('mousedown', e => e.stopPropagation());\n\n    this.onChange(this.value);\n  }\n\n  finishAnimation() {\n    if (this.animation) {\n      this.animation.finish();\n\n      this.value = this.animation.value();\n\n      this.onChange(this.value);\n    }\n  }\n\n  animate() {\n    this.value = this.animation.value();\n\n    this.onChange(this.value);\n\n    if (this.animation.finished) {\n      this.animating = false;\n      return;\n    }\n\n    window.requestAnimationFrame(this.animate);\n  }\n\n  onInput(e) {\n    const value = +e.target.value;\n\n    if (!this.animation) {\n      this.onChange(value);\n      return;\n    }\n\n    this.animation.start(this.value, value, this.animationDuration);\n\n    if (!this.animating) {\n      this.animating = true;\n      this.animate();\n    }\n  }\n}\n\nexport default TreeSlider;\n","class DragDelta {\n  constructor(elem = window, options) {\n    const { x, y, onChange } = options;\n\n    this.onChange = onChange;\n    this.elem = elem;\n\n    this.x = x();\n    this.y = y();\n\n    this.getX = x;\n    this.getY = y;\n\n    this.reset = this.reset.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n  }\n\n  onMouseMove(e) {\n    this.deltaX = e.clientX - this.pressedX;\n    this.deltaY = e.clientY - this.pressedY;\n\n    this.onChange([this.x + this.deltaX, this.y + this.deltaY]);\n  }\n\n  onMouseDown(e) {\n    this.pressedX = e.clientX;\n    this.pressedY = e.clientY;\n    this.x = this.getX();\n    this.y = this.getY();\n\n    this.elem.addEventListener('mousemove', this.onMouseMove);\n\n    this.elem.addEventListener('mouseup', this.reset);\n  }\n\n  reset() {\n    this.elem.removeEventListener('mousemove', this.onMouseMove);\n    this.elem.removeEventListener('mouseup', this.reset);\n\n    this.x += this.deltaX;\n    this.y += this.deltaY;\n  }\n\n  capture() {\n    this.elem.addEventListener('mousedown', this.onMouseDown);\n  }\n\n  stop() {\n    this.elem.removeEventListener('mousedown', this.onMouseDown);\n  }\n}\n\nexport default DragDelta;\n","class ScrollCapture {\n  constructor(elem = window, options) {\n    const { onChange } = options;\n\n    this.onChange = onChange;\n    this.elem = elem;\n\n    this.onMouseWheel = this.onMouseWheel.bind(this);\n  }\n\n  onMouseWheel(e) {\n    if (e.ctrlKey) return;\n\n    this.onChange([e.deltaX, e.deltaY]);\n  }\n\n  capture() {\n    this.elem.addEventListener('wheel', this.onMouseWheel);\n  }\n\n  stop() {\n    this.elem.removeEventListener('wheel', this.onMouseWheel);\n  }\n}\n\nexport default ScrollCapture;\n","class ScrollCapture {\n  constructor(elem = window, options) {\n    const { zoom, onChange } = options;\n\n    this.onChange = onChange;\n    this.elem = elem;\n\n    this.zoom = zoom;\n\n    this.onMouseWheel = this.onMouseWheel.bind(this);\n  }\n\n  onMouseWheel(e) {\n    if (!e.ctrlKey) return;\n\n    this.zoom -= e.deltaY * 0.3;\n\n    this.onChange(this.zoom);\n  }\n\n  capture() {\n    this.elem.addEventListener('wheel', this.onMouseWheel);\n  }\n\n  stop() {\n    this.elem.removeEventListener('wheel', this.onMouseWheel);\n  }\n}\n\nexport default ScrollCapture;\n","class Animation {\n  constructor() {\n    this.finished = true;\n  }\n\n  start(from, to, duration) {\n    this.finished = false;\n    this.startTime = Date.now();\n\n    this.duration = duration;\n    this.from = from;\n    this.to = to;\n  }\n\n  finish() {\n    this.finished = true;\n  }\n\n  value() {\n    if (this.finished) return this.to;\n\n    const progress = (Date.now() - this.startTime) / this.duration;\n\n    if (progress >= 1) {\n      this.finish();\n\n      if (this.cb) {\n        this.cb();\n      }\n\n      return this.to;\n    }\n\n    return this.from + (this.to - this.from) * progress * (2 - progress);\n  }\n\n  onEnd(cb) {\n    this.cb = cb;\n  }\n}\n\nexport default Animation;\n","import Tree from './Tree';\nimport TreeSlider from './TreeSlider';\nimport DragCapture from './DragCapture';\nimport ScrollCapture from './ScrollCapture';\nimport ZoomCapture from './ZoomCapture';\nimport Animation from './Animation';\nimport './style.css';\n\nlet animations = true;\n\nconst $animate = document.getElementById('animate');\nconst $animateSwitch = document.getElementById('animate-switch');\nconst $sliders = document.getElementById('sliders');\nlet sliders = [];\n\nconst FractalTree = new Tree({\n  color: '#ffd5d5',\n  width: window.innerWidth,\n  height: window.innerHeight,\n  leftOffset: 0,\n  topOffset: window.innerHeight - 200,\n  depth: 10,\n  angle: 40,\n  length: 100,\n  tilt: 0,\n  angleRatio: 0,\n  lengthRatio: 0.1,\n});\n\nconst DragCaptor = new DragCapture(window, {\n  x: () => FractalTree.get('leftOffset'),\n  y: () => FractalTree.get('topOffset'),\n  onChange: ([x, y]) => {\n    FractalTree.draw({\n      leftOffset: x,\n      topOffset: y,\n    });\n  },\n});\n\nconst ScrollCaptor = new ScrollCapture(window, {\n  onChange: ([deltaX, deltaY]) => {\n    FractalTree.draw({\n      leftOffset: FractalTree.get('leftOffset') - deltaX,\n      topOffset: FractalTree.get('topOffset') - deltaY,\n    });\n  },\n});\n\nconst ZoomCaptor = new ZoomCapture(window, {\n  zoom: FractalTree.get('length'),\n  onChange: zoom => {\n    FractalTree.draw({\n      length: zoom,\n    });\n  },\n});\n\nconst sliderDrawer = prop => value => {\n  FractalTree.draw({\n    [prop]: value,\n  });\n};\n\nconst initSliders = () => {\n  sliders.push(\n    new TreeSlider({\n      property: 'depth',\n      displayName: 'Depth',\n      value: FractalTree.get('depth'),\n      min: 0,\n      max: 15,\n      onChange: sliderDrawer('depth'),\n    }).mount($sliders),\n  );\n\n  sliders.push(\n    new TreeSlider({\n      property: 'angle',\n      displayName: 'Angle\\u00b0',\n      value: FractalTree.get('angle'),\n      min: 0,\n      max: 180,\n      animator: animations && new Animation(),\n      onChange: sliderDrawer('angle'),\n    }).mount($sliders),\n  );\n\n  sliders.push(\n    new TreeSlider({\n      property: 'length',\n      displayName: 'Length',\n      value: FractalTree.get('length'),\n      min: 0,\n      max: 1000,\n      animator: animations && new Animation(),\n      onChange: sliderDrawer('length'),\n    }).mount($sliders),\n  );\n\n  sliders.push(\n    new TreeSlider({\n      property: 'tilt',\n      displayName: 'Tilt\\u00b0',\n      value: FractalTree.get('tilt'),\n      min: -60,\n      max: 60,\n      animator: animations && new Animation(),\n      onChange: sliderDrawer('tilt'),\n    }).mount($sliders),\n  );\n\n  sliders.push(\n    new TreeSlider({\n      property: 'angleRatio',\n      displayName: 'Angle ratio',\n      value: FractalTree.get('angleRatio'),\n      min: -180,\n      max: 180,\n      step: 1,\n      animator: animations && new Animation(),\n      onChange: sliderDrawer('angleRatio'),\n    }).mount($sliders),\n  );\n\n  sliders.push(\n    new TreeSlider({\n      property: 'lengthRatio',\n      displayName: 'Length ratio',\n      value: FractalTree.get('lengthRatio'),\n      min: -1,\n      max: 1,\n      step: 0.001,\n      animator: animations && new Animation(),\n      onChange: sliderDrawer('lengthRatio'),\n    }).mount($sliders),\n  );\n};\n\nconst animation = new Animation();\n\nlet animLoop = false;\nlet startValue = FractalTree.get('lengthRatio');\n\nconst animateGrow = cb => {\n  FractalTree.draw({\n    lengthRatio: animation.value(),\n  });\n\n  if (animation.finished) {\n    cb();\n    return;\n  }\n\n  window.requestAnimationFrame(() => animateGrow(cb));\n};\n\nfunction growUp() {\n  if (!animLoop) return;\n\n  animation.start(0.5, startValue, 6000);\n\n  animateGrow(growDown);\n}\n\nfunction growDown() {\n  if (!animLoop) return;\n\n  animation.start(startValue, 0.5, 5000);\n\n  animateGrow(growUp);\n}\n\n$animate.addEventListener('click', () => {\n  animLoop = !animLoop;\n\n  if (animLoop) {\n    startValue = FractalTree.get('lengthRatio');\n\n    growDown();\n\n    $animate.innerHTML = 'Animating...';\n  } else {\n    animation.finish();\n\n    window.requestAnimationFrame(() => {\n      FractalTree.draw({\n        lengthRatio: startValue,\n      });\n    });\n\n    document.getElementById('animate').innerHTML = 'Animate';\n  }\n});\n\n$animateSwitch.addEventListener('click', () => {\n  animations = !animations;\n\n  sliders.forEach(slider => {\n    slider.finishAnimation();\n    slider.unmount();\n  });\n\n  sliders = [];\n\n  $animateSwitch.innerHTML = `Animations: ${animations ? 'on' : 'off'}`;\n\n  initSliders();\n});\n\nFractalTree.mount(document.getElementById('root'));\nFractalTree.draw();\n\nwindow.addEventListener('resize', () => {\n  FractalTree.draw({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n});\n\ninitSliders();\n$animateSwitch.innerHTML = `Animations: ${animations ? 'on' : 'off'}`;\n\nDragCaptor.capture();\nScrollCaptor.capture();\nZoomCaptor.capture();\n"]}